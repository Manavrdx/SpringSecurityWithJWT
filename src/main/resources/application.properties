spring.jpa.open-in-view=false
spring.jpa.properties.hibernate.jdbc.batch_size=30
spring.jpa.properties.hibernate.order_inserts=true
spring.jpa.properties.hibernate.order_updates=true
spring.jpa.properties.hibernate.connection.autocommit=false

spring.jpa.hibernate.ddl-auto=create
spring.jpa.show-sql=true

spring.datasource.url=jdbc:mysql://localhost:3306/jwt_learning
spring.datasource.username=root
spring.datasource.password=myPassword

#========================JWT TOKEN=============================================

# The JWT JWA Specification (RFC 7518, Section 3.2) states that keys used with
# HMAC-SHA algorithms MUST have a size >= 256 bits (the key size must be greater
# than or equal to the hash output size).
# Consider using the io.jsonwebtoken.security.Keys#secretKeyFor(SignatureAlgorithm)
# method to create a key guaranteed to be secure enough for your preferred HMAC-SHA algorithm
# key can't have _,- in it
jwt.sign-with-key=CZ1Em7Jez9vUFHrHRlwEbIJrrLOZH6SgynUSyUSv85Jynrpxu1qyn2DJh6upqLoubeUOtbrqRfT0dhfsRolz
jwt.signature-algorithm=HS256

# The supported units are ns, us, ms, s, m, h and d
# for nanoseconds, microseconds, milliseconds, seconds, minutes, hours, and days, respectively.
jwt.bearer-token-expiration=180s
jwt.refresh-token-expiration=300s
jwt.issued-by=https://your-domain.com
jwt.authority-key=roles
jwt.allowed-session-count=1

# if true, then if allowed sessions limit exceed, remove the old ones
jwt.auto-logout-from-other-device-on-overflow-session-count=true


logging.level.com.example.security.helper.LoggedOutJwtTokenCache=trace